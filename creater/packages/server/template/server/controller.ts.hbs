import { Body, Controller, Get, Post, Query, UsePipes } from '@nestjs/common'
import { BodyModel, QueryModel, QueryPage, ZodValidation } from '@/components'
import type { Many, Page } from '@/type'
import { IdVali } from '@/validator'
import { {{module}}Entity, type {{upper module}}Entity } from './model'
import { {{upper module}}Service } from './service'
import { AddVali, UpdateVali } from './validator'

@Controller('{{module}}')
export class {{upper module}}Controller {
  constructor(private readonly {{module}}Service: {{upper module}}Service) {}

  // 新增
  @Post('add')
  @UsePipes(new ZodValidation(AddVali))
  async add(@BodyModel({{module}}Entity) {{module}}: {{upper module}}Entity) {
    const result = await this.{{module}}Service.add({{module}})
    return result
  }
  // 删除
  @Post('delete')
  @UsePipes(new ZodValidation(IdVali))
  async delete(@Body() {{module}}: {{upper module}}Entity) {
    const result = await this.{{module}}Service.delete({{module}}.id)
    return result
  }
  // 批量删除
  @Post('deletes')
  async deletes(@Body() params: Many<{{ upper module}}Entity>) {
    const result = await this.{{module}}Service.deletes(params)
    return result
  }
  // 详情
  @Get('detail')
  @UsePipes(new ZodValidation(IdVali))
  async detail(@Query() {{module}}: {{upper module}}Entity) {
    const result = await this.{{module}}Service.detail({{module}}.id)
    return result
  }
  // 列表
  @Get('list')
  async list(
    @QueryModel({{module}}Entity) {{module}}: {{upper module}}Entity, 
    @QueryPage() page: Page
  ) {
    const result = await this.{{module}}Service.list({{module}}, page)
    return result
  }
  // 更新
  @Post('update')
  @UsePipes(new ZodValidation(UpdateVali))
  async update(@BodyModel({{module}}Entity) {{module}}: {{upper module}}Entity) {
    const result = await this.{{module}}Service.update({{module}})
    return result
  }
}
